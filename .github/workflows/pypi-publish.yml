---
#  Copyright (c) 2021, Andrey "Limych" Khrolenok <andrey@khrolenok.ru>
#  Creative Commons BY-NC-SA 4.0 International Public License
#  (see LICENSE.md or https://creativecommons.org/licenses/by-nc-sa/4.0/)

name: "Upload Python Package to PyPi"

on:
  push:
    tags:
      - "[v0-9]+.[0-9]+*"

jobs:
  release:
    name: "Create Release"
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout code"
        uses: actions/checkout@master

      - run: |
          echo "release_version=`echo ${{ github.ref }} | sed s/v//`" >> $GITHUB_ENV
          echo "is_prerelease=`if echo ${{ github.ref }} | grep -qE "(a|b|rc|dev)"; then echo true; else echo false; fi`" >> $GITHUB_ENV

      - name: "Set up Python"
        uses: actions/setup-python@v4.3.0
        with:
          python-version: '3.x'

      - name: "Install requirements"
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel
          pip install -r ./requirements-dev.txt

      - name: "Create Release"
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release v${{ env.release_version }}
          body: |
            Changes in this Release
          draft: false
          prerelease: ${{ env.is_prerelease }}

      - name: "Update release notes"
        run: python ./bin/gen_releasenotes --token ${{ secrets.GITHUB_TOKEN }} --repo ${{ github.repository }} --release ${{ github.ref }}

  deploy:
    name: "Deploy Release to PyPi"
    needs: release
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout code"
        uses: actions/checkout@master

      - name: "Set up Python"
        uses: actions/setup-python@v4.3.0
        with:
          python-version: '3.x'

      - name: "Install dependencies"
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine

      - name: "Deploy Release to PyPi"
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          python setup.py sdist bdist_wheel
          twine upload dist/*
